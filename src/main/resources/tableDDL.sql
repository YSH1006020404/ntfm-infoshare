--清空数据
TRUNCATE TABLE INFOSHARECONFIG;
TRUNCATE TABLE DATABASECONFIG;
TRUNCATE TABLE DATABASERELATION;
TRUNCATE TABLE XMLTEMPLATE;
TRUNCATE TABLE XMLFORMATCONFIG;
TRUNCATE TABLE OUTPUTRELATION;
TRUNCATE TABLE DESTINATIONCONFIG;
TRUNCATE TABLE ACTIVEMQCONFIG;
TRUNCATE TABLE IBMMQCONFIG;
TRUNCATE TABLE TCPIPCONFIG;
TRUNCATE TABLE FTPCONFIG;
TRUNCATE TABLE JOBRUNDETAIL;
TRUNCATE TABLE LINKSTATISTICS;
TRUNCATE TABLE CHECKCONN;
TRUNCATE TABLE PROPERTYTYPE;
TRUNCATE TABLE PROPERTYDICT;
--删除表
DROP TABLE INFOSHARECONFIG;
DROP TABLE DATABASECONFIG;
DROP TABLE DATABASERELATION;
DROP TABLE XMLTEMPLATE;
DROP TABLE XMLFORMATCONFIG;
DROP TABLE OUTPUTRELATION;
DROP TABLE DESTINATIONCONFIG;
DROP TABLE ACTIVEMQCONFIG;
DROP TABLE IBMMQCONFIG;
DROP TABLE TCPIPCONFIG;
DROP TABLE FTPCONFIG;
DROP TABLE JOBRUNDETAIL;
DROP TABLE LINKSTATISTICS;
DROP TABLE CHECKCONN;
DROP TABLE PROPERTYTYPE;
DROP TABLE PROPERTYDICT;
--DDL
 CREATE TABLE "INFOSHARECONFIG"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"LINK_DESCRIPTION" VARCHAR2(200 BYTE),
	"INTERACTION_MARK" VARCHAR2(50 BYTE),
	"COMPANY_NAME" VARCHAR2(100 BYTE),
	"STATE_FLAG" NUMBER(1,0),
	"INTERACTION_TYPE" VARCHAR2(10 BYTE),
	"SOURCE_TYPE" NUMBER(10,0),
	"SOURCE_ID" NUMBER(10,0),
	"CREATE_USER" VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "INFOSHARECONFIG"."ID" IS 'ID';
 COMMENT ON COLUMN "INFOSHARECONFIG"."LINK_DESCRIPTION" IS '链路描述';
 COMMENT ON COLUMN "INFOSHARECONFIG"."INTERACTION_MARK" IS '交互标识';
 COMMENT ON COLUMN "INFOSHARECONFIG"."COMPANY_NAME" IS '单位名称';
 COMMENT ON COLUMN "INFOSHARECONFIG"."STATE_FLAG" IS '开关状态(0:关闭 1:开启)';
 COMMENT ON COLUMN "INFOSHARECONFIG"."INTERACTION_TYPE" IS '交互类型(IN:输入 OUT:输出)';
 COMMENT ON COLUMN "INFOSHARECONFIG"."SOURCE_TYPE" IS '数据接收方式';
 COMMENT ON COLUMN "INFOSHARECONFIG"."SOURCE_ID" IS '数据接收配置关联主键';
 COMMENT ON COLUMN "INFOSHARECONFIG"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "INFOSHARECONFIG"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "INFOSHARECONFIG"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "INFOSHARECONFIG"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "INFOSHARECONFIG" IS '信息共享配置';

 CREATE TABLE "DATABASECONFIG"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"ALL_FREQUENCY" VARCHAR2(50 BYTE),
	"INC_FREQUENCY" VARCHAR2(50 BYTE),
	"XMLTEMPLATE_ID" NUMBER(10,0),
	"XMLFORMATCONFIG_ID" NUMBER(10,0),
	"SPLIT_NUM" NUMBER,
	"BEAT_FLAG" NUMBER(1,0),
	"DEDUPLICATION_FLAG" NUMBER(1,0),
	"TABLE_ID" NUMBER(10,0),
	"TABLE_NAME" VARCHAR2(50 BYTE),
	"CONDITION" VARCHAR2(1000 BYTE),
	"CREATE_USER" VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "DATABASECONFIG"."ID" IS '主键';
 COMMENT ON COLUMN "DATABASECONFIG"."ALL_FREQUENCY" IS '全量发送频率';
 COMMENT ON COLUMN "DATABASECONFIG"."INC_FREQUENCY" IS '增量发送频率';
 COMMENT ON COLUMN "DATABASECONFIG"."XMLTEMPLATE_ID" IS 'XML模板的关联主键';
 COMMENT ON COLUMN "DATABASECONFIG"."XMLFORMATCONFIG_ID" IS 'XML配置的关联主键';
 COMMENT ON COLUMN "DATABASECONFIG"."SPLIT_NUM" IS 'XML最大组装数据量';
 COMMENT ON COLUMN "DATABASECONFIG"."BEAT_FLAG" IS '是否发送心跳(0:否 1:是)';
 COMMENT ON COLUMN "DATABASECONFIG"."DEDUPLICATION_FLAG" IS '增量发送是否去重(0:否 1:是)';
 COMMENT ON COLUMN "DATABASECONFIG"."TABLE_ID" IS '数据抽取表的关联主键';
 COMMENT ON COLUMN "DATABASECONFIG"."TABLE_NAME" IS '数据抽取表的表名';
 COMMENT ON COLUMN "DATABASECONFIG"."CONDITION" IS '筛选条件';
 COMMENT ON COLUMN "DATABASECONFIG"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "DATABASECONFIG"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "DATABASECONFIG"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "DATABASECONFIG"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "DATABASECONFIG" IS '数据抽取配置表';

 CREATE TABLE "DATABASERELATION"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"DATABASECONFIG_ID" NUMBER(10,0),
	"TABLE_ID" NUMBER(10,0),
	"TABLE_NAME" VARCHAR2(50 BYTE),
	"BASE_TABLE_COLUMN" VARCHAR2(50 BYTE),
	"RELATION_TABLE_COLUMN" VARCHAR2(50 BYTE),
	"CONDITION" VARCHAR2(1000 BYTE),
	"CREATE_USER" VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "DATABASERELATION"."ID" IS '主键';
 COMMENT ON COLUMN "DATABASERELATION"."DATABASECONFIG_ID" IS '数据源配置表的主键';
 COMMENT ON COLUMN "DATABASERELATION"."TABLE_ID" IS '关联表的主键';
 COMMENT ON COLUMN "DATABASERELATION"."TABLE_NAME" IS '关联表的表名';
 COMMENT ON COLUMN "DATABASERELATION"."BASE_TABLE_COLUMN" IS '基础表的关联字段';
 COMMENT ON COLUMN "DATABASERELATION"."RELATION_TABLE_COLUMN" IS '关联表的关联字段';
 COMMENT ON COLUMN "DATABASERELATION"."CONDITION" IS '筛选条件';
 COMMENT ON COLUMN "DATABASERELATION"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "DATABASERELATION"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "DATABASERELATION"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "DATABASERELATION"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "DATABASERELATION" IS '数据源详情关联表';


 CREATE TABLE "XMLTEMPLATE"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"PID" NUMBER(10,0),
	"DISPLAY_SEQ" NUMBER(10,0),
	"LABEL_NAME" VARCHAR2(50 BYTE),
	"LABEL_TYPE" VARCHAR2(50 BYTE),
	"VALUE" VARCHAR2(100 BYTE),
	"DISPLAY_NAME" VARCHAR2(100 BYTE),
	"CREATE_USER" VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "XMLTEMPLATE"."ID" IS '主键';
 COMMENT ON COLUMN "XMLTEMPLATE"."PID" IS '父键';
 COMMENT ON COLUMN "XMLTEMPLATE"."DISPLAY_SEQ" IS '顺序';
 COMMENT ON COLUMN "XMLTEMPLATE"."LABEL_NAME" IS '节点名称';
 COMMENT ON COLUMN "XMLTEMPLATE"."LABEL_TYPE" IS  '节点类型（TXT:文本; SUBTYPE:消息子类型; YYYYMMDDHHMMSS:时间年月日时分秒; SERIAL:流水号; STATISTICS:报文数据量统计：全量/增量(ALL/INC)_一次任务报文数据量_报文当前页数/报文总页数_当前报文数据量;  ROOTDATALIST:LIST标签（基础表）; DATALIST:LIST标签（关联表）; DATAITEM:单条记录标签; DBCOLUMN:数据库字段; OTHER:其他标签类型）';
 COMMENT ON COLUMN "XMLTEMPLATE"."VALUE" IS '值';
 COMMENT ON COLUMN "XMLTEMPLATE"."DISPLAY_NAME" IS 'XML模板名称';
 COMMENT ON COLUMN "XMLTEMPLATE"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "XMLTEMPLATE"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "XMLTEMPLATE"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "XMLTEMPLATE"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "XMLTEMPLATE" IS 'XML模板配置表';

 CREATE TABLE "XMLFORMATCONFIG"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"PID" NUMBER(10,0),
	"DISPLAY_SEQ" NUMBER(10,0),
	"LABEL_NAME" VARCHAR2(50 BYTE),
	"LABEL_TYPE" VARCHAR2(50 BYTE),
	"VALUE" VARCHAR2(100 BYTE),
	"TABLE_ID" NUMBER(10,0),
	"TABLE_NAME" VARCHAR2(50 BYTE),
	"OUTPUTRELATION_ID" NUMBER(10,0),
	"CREATE_USER" VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "XMLFORMATCONFIG"."ID" IS '主键';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."PID" IS '父键';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."DISPLAY_SEQ" IS '顺序';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."LABEL_NAME" IS '节点名称';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."LABEL_TYPE" IS '节点类型（TXT:文本; SUBTYPE:消息子类型; YYYYMMDDHHMMSS:时间年月日时分秒; SERIAL:流水号; STATISTICS:报文数据量统计：全量/增量(ALL/INC)_一次任务报文数据量_报文当前页数/报文总页数_当前报文数据量;  ROOTDATALIST:LIST标签（基础表）; DATALIST:LIST标签（关联表）; DATAITEM:单条记录标签; DBCOLUMN:数据库字段; OTHER:其他标签类型）';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."VALUE" IS '值';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."TABLE_ID" IS '关联表ID';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."TABLE_NAME" IS '关联表名';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."OUTPUTRELATION_ID" IS '输出配置关联ID';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "XMLFORMATCONFIG"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "XMLFORMATCONFIG" IS 'XML格式配置表';

 CREATE TABLE "OUTPUTRELATION"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"COLUMN_NAME" VARCHAR2(32 BYTE),
	"COLUMN_TYPE" VARCHAR2(20 BYTE),
	"DATE_FORMAT" VARCHAR2(20 BYTE),
	"EXPLAIN" VARCHAR2(500 BYTE),
	"CREATE_USER" VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "OUTPUTRELATION"."ID" IS 'ID';
 COMMENT ON COLUMN "OUTPUTRELATION"."COLUMN_NAME" IS '项目名';
 COMMENT ON COLUMN "OUTPUTRELATION"."COLUMN_TYPE" IS '输出字段类型';
 COMMENT ON COLUMN "OUTPUTRELATION"."DATE_FORMAT" IS '日期输出格式';
 COMMENT ON COLUMN "OUTPUTRELATION"."EXPLAIN" IS '注释';
 COMMENT ON COLUMN "OUTPUTRELATION"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "OUTPUTRELATION"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "OUTPUTRELATION"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "OUTPUTRELATION"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "OUTPUTRELATION" IS '数据输出字段关联表';

 CREATE TABLE "DESTINATIONCONFIG"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"INFOSHARECONFIG_ID" NUMBER(10,0),
	"DESTINATION_TYPE_ID" NUMBER(10,0),
	"DESTINATION_TYPE" VARCHAR2(50 BYTE),
	"DESTINATION_ID" NUMBER(10,0),
	"STATUS_FLAG" NUMBER(1,0));
 COMMENT ON COLUMN "DESTINATIONCONFIG"."ID" IS '主键';
 COMMENT ON COLUMN "DESTINATIONCONFIG"."INFOSHARECONFIG_ID" IS '信息共享链路配置主键';
 COMMENT ON COLUMN "DESTINATIONCONFIG"."DESTINATION_TYPE_ID" IS '消息目的地类型的字典项主键';
 COMMENT ON COLUMN "DESTINATIONCONFIG"."DESTINATION_TYPE" IS '消息目的地配置表名';
 COMMENT ON COLUMN "DESTINATIONCONFIG"."DESTINATION_ID" IS '消息目的地关联配置的主键';
 COMMENT ON COLUMN "DESTINATIONCONFIG"."STATUS_FLAG" IS '状态（0：关闭 1：开启）';
 COMMENT ON TABLE "DESTINATIONCONFIG" IS '消息目的地关联表';

 CREATE TABLE "ACTIVEMQCONFIG"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"URL" VARCHAR2(100 BYTE),
	"USER_NAME" VARCHAR2(50 BYTE),
	"PASSWORD" VARCHAR2(50 BYTE),
	"PROCESS_MODE" VARCHAR2(50 BYTE),
	"DESTINATION" VARCHAR2(100 BYTE),
	"OBJECT_NAME" VARCHAR2(100 BYTE),
	"CREATE_USER" VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."ID" IS 'ID';
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."URL" IS '连接地址';
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."USER_NAME" IS '用户名';
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."PASSWORD" IS '密码';
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."PROCESS_MODE" IS '消息传递模式（QUEUE:队列 TOPIC:主题）';
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."DESTINATION" IS '目的地';
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."OBJECT_NAME" IS '对象名称';
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "ACTIVEMQCONFIG"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "ACTIVEMQCONFIG" IS 'activeMq配置';

 CREATE TABLE "IBMMQCONFIG"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"URL" VARCHAR2(100 BYTE),
	"MANAGER" VARCHAR2(100 BYTE),
	"CHANNEL" VARCHAR2(50 BYTE),
	"CCSID" NUMBER(10,0),
	"USER_NAME" VARCHAR2(50 BYTE),
	"PASSWORD" VARCHAR2(50 BYTE),
	"PROCESS_MODE" VARCHAR2(50 BYTE),
	"DESTINATION" VARCHAR2(100 BYTE),
	"OBJECT_NAME" VARCHAR2(100 BYTE),
	"CREATE_USER" VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "IBMMQCONFIG"."ID" IS 'ID';
 COMMENT ON COLUMN "IBMMQCONFIG"."URL" IS '地址';
 COMMENT ON COLUMN "IBMMQCONFIG"."MANAGER" IS '队列管理器';
 COMMENT ON COLUMN "IBMMQCONFIG"."CHANNEL" IS '通道';
 COMMENT ON COLUMN "IBMMQCONFIG"."CCSID" IS '编码';
 COMMENT ON COLUMN "IBMMQCONFIG"."USER_NAME" IS '用户名';
 COMMENT ON COLUMN "IBMMQCONFIG"."PASSWORD" IS '密码';
 COMMENT ON COLUMN "IBMMQCONFIG"."PROCESS_MODE" IS '消息传递模式（QUEUE:队列 TOPIC:主题）';
 COMMENT ON COLUMN "IBMMQCONFIG"."DESTINATION" IS '目的地';
 COMMENT ON COLUMN "IBMMQCONFIG"."OBJECT_NAME" IS '对象名称';
 COMMENT ON COLUMN "IBMMQCONFIG"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "IBMMQCONFIG"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "IBMMQCONFIG"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "IBMMQCONFIG"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "IBMMQCONFIG" IS 'ibmMq配置';

 CREATE TABLE "TCPIPCONFIG"
 ("ID" NUMBER PRIMARY KEY,
	"IPS" VARCHAR2(50 BYTE),
	"PORT" VARCHAR2(20 BYTE),
	"NUMMSGHEAD" VARCHAR2(20 BYTE),
	"NUMMSGTAIL" VARCHAR2(20 BYTE),
	"OBJECT_NAME" VARCHAR2(100 BYTE),
	"CREATE_TIME" DATE,
	"CREATE_USER" VARCHAR2(50 BYTE),
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "TCPIPCONFIG"."ID" IS '主键';
 COMMENT ON COLUMN "TCPIPCONFIG"."IPS" IS 'IP地址';
 COMMENT ON COLUMN "TCPIPCONFIG"."PORT" IS '端口号';
 COMMENT ON COLUMN "TCPIPCONFIG"."NUMMSGHEAD" IS '报文头';
 COMMENT ON COLUMN "TCPIPCONFIG"."NUMMSGTAIL" IS '报文尾';
 COMMENT ON COLUMN "TCPIPCONFIG"."OBJECT_NAME" IS '对象名称';
 COMMENT ON COLUMN "TCPIPCONFIG"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "TCPIPCONFIG"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "TCPIPCONFIG"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "TCPIPCONFIG"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "TCPIPCONFIG" IS 'tcpip配置';

 CREATE TABLE "FTPCONFIG"
 ("ID" NUMBER PRIMARY KEY,
	"IP" VARCHAR2(20 BYTE),
	"PATH" VARCHAR2(100 BYTE),
	"PORT" VARCHAR2(20 BYTE),
	"FILE_NAME_PREFIX" VARCHAR2(20 BYTE),
	"USERNAME" VARCHAR2(20 BYTE),
	"PASSWORD" VARCHAR2(20 BYTE),
	"OBJECT_NAME" VARCHAR2(100 BYTE),
	"CREATE_USER" VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "FTPCONFIG"."ID" IS '主键';
 COMMENT ON COLUMN "FTPCONFIG"."IP" IS '服务器IP地址';
 COMMENT ON COLUMN "FTPCONFIG"."PATH" IS '服务器端文件传输路径';
 COMMENT ON COLUMN "FTPCONFIG"."PORT" IS '服务器端口';
 COMMENT ON COLUMN "FTPCONFIG"."FILE_NAME_PREFIX" IS '文件名前缀';
 COMMENT ON COLUMN "FTPCONFIG"."USERNAME" IS '用户名';
 COMMENT ON COLUMN "FTPCONFIG"."PASSWORD" IS '密码';
 COMMENT ON COLUMN "FTPCONFIG"."OBJECT_NAME" IS '对象名称';
 COMMENT ON COLUMN "FTPCONFIG"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "FTPCONFIG"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "FTPCONFIG"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "FTPCONFIG"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "FTPCONFIG" IS 'ftp配置';

 CREATE TABLE "JOBRUNDETAIL"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"JOB_GROUP" VARCHAR2(100 BYTE),
	"JOB_NAME" VARCHAR2(100 BYTE),
	"CHECK_TIME" DATE);
 COMMENT ON COLUMN "JOBRUNDETAIL"."ID" IS '主键';
 COMMENT ON COLUMN "JOBRUNDETAIL"."JOB_GROUP" IS 'JOB组';
 COMMENT ON COLUMN "JOBRUNDETAIL"."JOB_NAME" IS 'JOB名称';
 COMMENT ON COLUMN "JOBRUNDETAIL"."CHECK_TIME" IS '已发送增量数据的最新时间';
 COMMENT ON TABLE "JOBRUNDETAIL" IS 'JOB执行情况';

CREATE TABLE LINKSTATISTICS
(ID NUMBER(10,0) PRIMARY KEY,
 INFOSHARECONFIG_ID NUMBER(10,0) ,
 DESTINATIONCONFIG_ID NUMBER(10,0) ,
 STATISTICS_TIME VARCHAR2(8),
 STATISTICS_COUNT NUMBER(10,0) ,
 SERIAL_NUMBER NUMBER(10,0) ,
 CREATE_USER VARCHAR2(32 BYTE),
 CREATE_TIME DATE,
 UPDATE_USER VARCHAR2(32 BYTE),
 UPDATE_TIME DATE);
COMMENT ON COLUMN "LINKSTATISTICS"."ID" IS 'ID';
COMMENT ON COLUMN "LINKSTATISTICS".INFOSHARECONFIG_ID IS '链路主键';
COMMENT ON COLUMN "LINKSTATISTICS".DESTINATIONCONFIG_ID IS '目的地主键';
COMMENT ON COLUMN "LINKSTATISTICS".STATISTICS_TIME IS '统计时间（UTC时）';
COMMENT ON COLUMN "LINKSTATISTICS".STATISTICS_COUNT IS '当天统计报文数量';
COMMENT ON COLUMN "LINKSTATISTICS".SERIAL_NUMBER IS '序列号';
COMMENT ON COLUMN "LINKSTATISTICS"."CREATE_USER" IS '创建用户';
COMMENT ON COLUMN "LINKSTATISTICS"."CREATE_TIME" IS '创建时间';
COMMENT ON COLUMN "LINKSTATISTICS"."UPDATE_USER" IS '更新用户';
COMMENT ON COLUMN "LINKSTATISTICS"."UPDATE_TIME" IS '更新时间';
COMMENT ON TABLE "LINKSTATISTICS" IS '链路统计';

 CREATE TABLE "CHECKCONN"
 ("HOST" VARCHAR2(30 BYTE),
	"CONN" NUMBER(30,0),
	"CHECK_TIME" DATE,
	"OPER" VARCHAR2(15 BYTE)
 );

 CREATE TABLE "PROPERTYTYPE"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"PROPERTY_NAME" VARCHAR2(60 BYTE)
 );
 COMMENT ON COLUMN "PROPERTYTYPE"."ID" IS '主键';
 COMMENT ON COLUMN "PROPERTYTYPE"."PROPERTY_NAME" IS '领域属性';
 COMMENT ON TABLE "PROPERTYTYPE" IS '字典项类型';


 CREATE TABLE "PROPERTYDICT"
 ("ID" NUMBER(10,0) PRIMARY KEY,
	"PROPERTYTYPE_ID" NUMBER(10,0),
	"DISPLAY_SEQ" NUMBER(10,0),
	"DISPLAY_NAME" VARCHAR2(100 BYTE),
	"DICT_VALUE" VARCHAR2(100 BYTE),
	"RELATION_TABLE" VARCHAR2(50 BYTE),
	"COLUMN_LABEL" VARCHAR2(100 BYTE),
	"CREATE_USER" VARCHAR2(32 BYTE),
	"CREATE_TIME" DATE,
	"UPDATE_USER" VARCHAR2(32 BYTE),
	"UPDATE_TIME" DATE);
 COMMENT ON COLUMN "PROPERTYDICT"."ID" IS 'ID';
 COMMENT ON COLUMN "PROPERTYDICT"."PROPERTYTYPE_ID" IS '领域属性id';
 COMMENT ON COLUMN "PROPERTYDICT"."DISPLAY_SEQ" IS '显示顺序';
 COMMENT ON COLUMN "PROPERTYDICT"."DISPLAY_NAME" IS '显示名称';
 COMMENT ON COLUMN "PROPERTYDICT"."DICT_VALUE" IS '值';
 COMMENT ON COLUMN "PROPERTYDICT"."RELATION_TABLE" IS '关联表名（例:ACTIVEMQCONFIGURATION）';
 COMMENT ON COLUMN "PROPERTYDICT"."CREATE_USER" IS '创建用户';
 COMMENT ON COLUMN "PROPERTYDICT"."CREATE_TIME" IS '创建时间';
 COMMENT ON COLUMN "PROPERTYDICT"."UPDATE_USER" IS '更新用户';
 COMMENT ON COLUMN "PROPERTYDICT"."UPDATE_TIME" IS '更新时间';
 COMMENT ON TABLE "PROPERTYDICT" IS '字典项详情';

--字典项数据初始化
Insert into PROPERTYTYPE (ID,PROPERTY_NAME) values (SEQ_PROPERTYTYPE.NEXTVAL,'数据接收方式');
Insert into PROPERTYDICT (ID,CREATE_USER,CREATE_TIME,UPDATE_USER,UPDATE_TIME,PROPERTYTYPE_ID,DISPLAY_SEQ,DISPLAY_NAME,DICT_VALUE,RELATION_TABLE,COLUMN_LABEL) values (SEQ_PROPERTYDICT.NEXTVAL,'admin',SYSDATE,null,null,SEQ_PROPERTYTYPE.CURRVAL,0,'Active mq','ActiveMq','ACTIVEMQCONFIG',null);
Insert into PROPERTYDICT (ID,CREATE_USER,CREATE_TIME,UPDATE_USER,UPDATE_TIME,PROPERTYTYPE_ID,DISPLAY_SEQ,DISPLAY_NAME,DICT_VALUE,RELATION_TABLE,COLUMN_LABEL) values (SEQ_PROPERTYDICT.NEXTVAL,'admin',SYSDATE,null,null,SEQ_PROPERTYTYPE.CURRVAL,1,'IBM mq','IbmMq','IBMMQCONFIG',null);
Insert into PROPERTYDICT (ID,CREATE_USER,CREATE_TIME,UPDATE_USER,UPDATE_TIME,PROPERTYTYPE_ID,DISPLAY_SEQ,DISPLAY_NAME,DICT_VALUE,RELATION_TABLE,COLUMN_LABEL) values (SEQ_PROPERTYDICT.NEXTVAL,'admin',SYSDATE,null,SYSDATE,SEQ_PROPERTYTYPE.CURRVAL,2,'TCPIP','tcpip','TCPIPCONFIG',null);
Insert into PROPERTYDICT (ID,CREATE_USER,CREATE_TIME,UPDATE_USER,UPDATE_TIME,PROPERTYTYPE_ID,DISPLAY_SEQ,DISPLAY_NAME,DICT_VALUE,RELATION_TABLE,COLUMN_LABEL) values (SEQ_PROPERTYDICT.NEXTVAL,'admin',SYSDATE,null,null,SEQ_PROPERTYTYPE.CURRVAL,3,'数据库','Database','DATABASECONFIG',null);
Insert into PROPERTYTYPE (ID,PROPERTY_NAME) values (SEQ_PROPERTYTYPE.NEXTVAL,'数据发送方式');
Insert into PROPERTYDICT (ID,CREATE_USER,CREATE_TIME,UPDATE_USER,UPDATE_TIME,PROPERTYTYPE_ID,DISPLAY_SEQ,DISPLAY_NAME,DICT_VALUE,RELATION_TABLE,COLUMN_LABEL) values (SEQ_PROPERTYDICT.NEXTVAL,'admin',SYSDATE,null,null,SEQ_PROPERTYTYPE.CURRVAL,0,'Active mq','ActiveMq','ACTIVEMQCONFIG',null);
Insert into PROPERTYDICT (ID,CREATE_USER,CREATE_TIME,UPDATE_USER,UPDATE_TIME,PROPERTYTYPE_ID,DISPLAY_SEQ,DISPLAY_NAME,DICT_VALUE,RELATION_TABLE,COLUMN_LABEL) values (SEQ_PROPERTYDICT.NEXTVAL,'admin',SYSDATE,null,null,SEQ_PROPERTYTYPE.CURRVAL,1,'IBM mq','IbmMq','IBMMQCONFIG',null);
Insert into PROPERTYDICT (ID,CREATE_USER,CREATE_TIME,UPDATE_USER,UPDATE_TIME,PROPERTYTYPE_ID,DISPLAY_SEQ,DISPLAY_NAME,DICT_VALUE,RELATION_TABLE,COLUMN_LABEL) values (SEQ_PROPERTYDICT.NEXTVAL,'admin',SYSDATE,null,null,SEQ_PROPERTYTYPE.CURRVAL,2,'TCPIP','Tcpip','TCPIPCONFIG',null);
Insert into PROPERTYDICT (ID,CREATE_USER,CREATE_TIME,UPDATE_USER,UPDATE_TIME,PROPERTYTYPE_ID,DISPLAY_SEQ,DISPLAY_NAME,DICT_VALUE,RELATION_TABLE,COLUMN_LABEL) values (SEQ_PROPERTYDICT.NEXTVAL,'admin',SYSDATE,null,null,SEQ_PROPERTYTYPE.CURRVAL,3,'ftp','Ftp','FTPCONFIG',null);
Insert into PROPERTYTYPE (ID,PROPERTY_NAME) values (SEQ_PROPERTYTYPE.NEXTVAL,'输出数据类型');
commit;




--存储过程定义：增加数据源
CREATE OR REPLACE PROCEDURE PRO_ADD_TABLE(TABLENAME          IN VARCHAR2, --表名
                                          TABLECOMMENT       IN VARCHAR2, --表的名称
                                          PRIMARYKEY         IN VARCHAR2, --主键
                                          UPDATETIMECOLUMN   IN VARCHAR2, --更新时间的字段
                                          ALTERPROCLEANTABLE IN NUMBER, --是否更新清除去重表的存储过程
                                          HASDATETYPE        IN NUMBER) --是否有DATE类型的日期数据
AUTHID CURRENT_USER IS
  --去重表定义
  CTABLE_DDL CLOB;
  --索引定义
  TABLE_INDEX VARCHAR2(100);
  --清除去重表的存储过程定义
  PRO_CLEANCTABLE_DDL CLOB;
  --清除去重表的存储过程是否已经存在
  PRO_CLEANCTABLE_COUNT NUMBER;
BEGIN
  --创建去重表
  CTABLE_DDL := 'CREATE TABLE C_' || TABLENAME || ' (LINKID NUMBER(10)';
  FOR BASETABLE IN (SELECT *
                      FROM USER_TAB_COLUMNS
                     WHERE TABLE_NAME = TABLENAME) LOOP
    CTABLE_DDL := CTABLE_DDL || ',"' || BASETABLE.COLUMN_NAME || '" ' ||
                  BASETABLE.DATA_TYPE;
    IF BASETABLE.DATA_TYPE NOT IN ('DATE', 'CLOB') THEN
      CTABLE_DDL := CTABLE_DDL || '(' || BASETABLE.DATA_LENGTH || ')';
    END IF;
  END LOOP;
  CTABLE_DDL := CTABLE_DDL || ')';
  --DBMS_OUTPUT.PUT_LINE('去重表DDL：');
  --DBMS_OUTPUT.PUT_LINE(CTABLE_DDL);
  EXECUTE IMMEDIATE CTABLE_DDL;

  --创建去重表的索引
  --TABLE_INDEX := 'CREATE INDEX IDX_C_' || TABLENAME || '_LINKID ON C_' ||
  --              TABLENAME || '(LINKID)';
  --DBMS_OUTPUT.PUT_LINE('创建索引：');
  --DBMS_OUTPUT.PUT_LINE(TABLE_INDEX);
  --EXECUTE IMMEDIATE TABLE_INDEX;
  --索引名称的长度<30
  --TABLE_INDEX := 'CREATE INDEX IDX_C_' || TABLENAME || '_' || PRIMARYKEY ||
  --              ' ON C_' || TABLENAME || '(' || PRIMARYKEY || ')';
  --IF (length(TABLENAME) + length(PRIMARYKEY) <= 23) THEN
    --DBMS_OUTPUT.PUT_LINE('创建索引：');
    --DBMS_OUTPUT.PUT_LINE(TABLE_INDEX);
    --EXECUTE IMMEDIATE TABLE_INDEX;
  --END IF;
  --修改清除去重表的存储过程
  IF ALTERPROCLEANTABLE = 1 THEN
    SELECT COUNT(1)
      INTO PRO_CLEANCTABLE_COUNT
      FROM USER_SOURCE
     WHERE NAME = TABLENAME
       AND TYPE = 'PROCEDURE';
    IF (PRO_CLEANCTABLE_COUNT = 0) THEN
      PRO_CLEANCTABLE_DDL := 'CREATE OR REPLACE PROCEDURE PRO_CLEANCTABLE AS' ||
                             CHR(10);
      PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || 'BEGIN' || CHR(10);
      PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || ' DELETE FROM C_' ||
                             TABLENAME || ' WHERE ';
      IF HASDATETYPE = 0 THEN
        PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || UPDATETIMECOLUMN ||
                               ' < TO_CHAR(SYSDATE - 10,''YYYYMMDDHH24MISS'');';
      ELSE
        PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || UPDATETIMECOLUMN ||
                               ' < (SYSDATE - 10);';
      END IF;
      PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || CHR(10);
      PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || ' COMMIT;' || CHR(10);
      PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || 'END;' || CHR(10);
    ELSE
      PRO_CLEANCTABLE_DDL := 'CREATE OR REPLACE ';
      FOR PROCEDURE_DDL IN (SELECT *
                              FROM USER_SOURCE
                             WHERE NAME = TABLENAME
                               AND TYPE = 'PROCEDURE') LOOP
        IF SUBSTR(PROCEDURE_DDL.TEXT, 2, 6) = 'COMMIT' THEN
          PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || ' DELETE FROM C_' ||
                                 TABLENAME || ' WHERE ';
          IF HASDATETYPE = 0 THEN
            PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || UPDATETIMECOLUMN ||
                                   ' < TO_CHAR(SYSDATE - 10,''YYYYMMDDHH24MISS'');';
          ELSE
            PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || UPDATETIMECOLUMN ||
                                   ' < (SYSDATE - 10);';
          END IF;
          PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || CHR(10);
        END IF;
        PRO_CLEANCTABLE_DDL := PRO_CLEANCTABLE_DDL || PROCEDURE_DDL.TEXT;
      END LOOP;
    END IF;
    --DBMS_OUTPUT.PUT_LINE('清除去重表的存储过程DDL：');
    --DBMS_OUTPUT.PUT_LINE(PRO_CLEANCTABLE_DDL);
    EXECUTE IMMEDIATE PRO_CLEANCTABLE_DDL;
  END IF;

  --增加字典项
  INSERT INTO PROPERTYDICT
    (ID,
     CREATE_USER,
     CREATE_TIME,
     PROPERTYTYPE_ID,
     DISPLAY_SEQ,
     DISPLAY_NAME,
     DICT_VALUE,
     RELATION_TABLE,
     COLUMN_LABEL)
  VALUES
    (SEQ_PROPERTYDICT.NEXTVAL,
     'ADMIN',
     SYSDATE,
     (SELECT ID FROM PROPERTYTYPE WHERE PROPERTY_NAME = '输出数据类型'),
     (SELECT CASE
               WHEN MAX(DISPLAY_SEQ) IS NULL THEN
                0
               ELSE
                MAX(DISPLAY_SEQ) + 1
             END
        FROM PROPERTYDICT
       WHERE PROPERTYTYPE_ID =
             (SELECT ID
                FROM PROPERTYTYPE
               WHERE PROPERTY_NAME = '输出数据类型')),
     TABLECOMMENT,
     TABLENAME,
     TABLENAME,
     PRIMARYKEY);
  COMMIT;

END PRO_ADD_TABLE;
/


  --存储过程定义：主从表的视图创建
  CREATE OR REPLACE PROCEDURE PRO_ADD_VIEW(BASETABLENAME        IN VARCHAR2, --基础表表名
                                           BASETABLECOLUMN      IN VARCHAR2, --基础表关联字段
                                           RELATIONTABLENAME    IN VARCHAR2, --关联表表名
                                           RELATIONTABLECOLUMN  IN VARCHAR2, --关联表字段
                                           RELATIONTABLECOMMENT IN VARCHAR2, --关联表名称
                                           UPDATETIMECOLUMN     IN VARCHAR2) --更新时间字段
  AUTHID CURRENT_USER IS
  --基础表视图定义
  VIEW_DDL CLOB;
  --基础表视图的字段注释
  COLUMN_COMMENT VARCHAR2(500);
  --基础表视图是否已经存在
  VIEW_COUNT NUMBER;
BEGIN
  --创建基础表视图
  VIEW_DDL := 'CREATE OR REPLACE VIEW V_' || BASETABLENAME || ' AS SELECT ';
  FOR COLUMN_NAMES IN (SELECT *
                         FROM USER_COL_COMMENTS
                        WHERE TABLE_NAME = BASETABLENAME) LOOP
    IF COLUMN_NAMES.COLUMN_NAME != UPDATETIMECOLUMN THEN
      VIEW_DDL := VIEW_DDL || 'T1.' || COLUMN_NAMES.COLUMN_NAME || ', ';
    END IF;
  END LOOP;
  VIEW_DDL := VIEW_DDL || 'T2.' || UPDATETIMECOLUMN || ' AS ' ||
              RELATIONTABLENAME || '_' || UPDATETIMECOLUMN || ', ';
  VIEW_DDL := VIEW_DDL || 'GREATEST(T1.' || UPDATETIMECOLUMN || ',T2.' ||
              UPDATETIMECOLUMN || ') AS ' || UPDATETIMECOLUMN;
  VIEW_DDL := VIEW_DDL || ' FROM ' || BASETABLENAME || ' T1';
  VIEW_DDL := VIEW_DDL || ' LEFT JOIN ( ';
  VIEW_DDL := VIEW_DDL || ' SELECT ' || RELATIONTABLECOLUMN || ', MAX(' ||
              UPDATETIMECOLUMN || ') AS ' || UPDATETIMECOLUMN || ' FROM ' ||
              RELATIONTABLENAME || ' GROUP BY ' || RELATIONTABLECOLUMN ||
              ') T2';
  VIEW_DDL := VIEW_DDL || ' ON T1.' || BASETABLECOLUMN || ' = T2.' ||
              RELATIONTABLECOLUMN;

  DBMS_OUTPUT.PUT_LINE('视图DDL：');
  DBMS_OUTPUT.PUT_LINE(VIEW_DDL);
  EXECUTE IMMEDIATE VIEW_DDL;

  --添加基础表视图的注释
  FOR COLUMN_NAMES IN (SELECT *
                         FROM USER_COL_COMMENTS
                        WHERE TABLE_NAME = BASETABLENAME) LOOP
    COLUMN_COMMENT := 'COMMENT ON COLUMN V_' || BASETABLENAME || '.' ||
                      COLUMN_NAMES.COLUMN_NAME || ' IS ' || '''' ||
                      NVL(COLUMN_NAMES.COMMENTS, ' ') || '''';
    DBMS_OUTPUT.PUT_LINE('字段注释脚本：');
    DBMS_OUTPUT.PUT_LINE(COLUMN_COMMENT);
    EXECUTE IMMEDIATE COLUMN_COMMENT;
  END LOOP;
  COLUMN_COMMENT := 'COMMENT ON COLUMN V_' || BASETABLENAME || '.' ||
                    RELATIONTABLENAME || '_' || UPDATETIMECOLUMN || ' IS ' || '''' ||
                    RELATIONTABLECOMMENT || '的更新时间' || '''';
  EXECUTE IMMEDIATE COLUMN_COMMENT;
  --增加字典项
  INSERT INTO PROPERTYDICT
    (ID,
     CREATE_USER,
     CREATE_TIME,
     PROPERTYTYPE_ID,
     DISPLAY_SEQ,
     DISPLAY_NAME,
     DICT_VALUE,
     RELATION_TABLE,
     COLUMN_LABEL)
  VALUES
    (SEQ_PROPERTYDICT.NEXTVAL,
     'ADMIN',
     SYSDATE,
     (SELECT ID FROM PROPERTYTYPE WHERE PROPERTY_NAME = '输出数据类型'),
     (SELECT CASE
               WHEN MAX(DISPLAY_SEQ) IS NULL THEN
                0
               ELSE
                MAX(DISPLAY_SEQ) + 1
             END
        FROM PROPERTYDICT
       WHERE PROPERTYTYPE_ID =
             (SELECT ID
                FROM PROPERTYTYPE
               WHERE PROPERTY_NAME = '输出数据类型')),
     RELATIONTABLECOMMENT,
     RELATIONTABLENAME,
     RELATIONTABLENAME,
     NULL);
  COMMIT;
END PRO_ADD_VIEW;
/
